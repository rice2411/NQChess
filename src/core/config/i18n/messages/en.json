{
  "metadata": {
    "version": "1.0.0",
    "lastUpdated": "2025-04-15"
  },
  "common": {
    "navigation": {
      "home": "Home",
      "about": "About",
      "contact": "Contact",
      "apiDocument": "API Documentation",
      "apiDocumentDescription": "View and test our API endpoints"
    },
    "buttons": {
      "submit": "Submit",
      "cancel": "Cancel",
      "save": "Save Changes"
    },
    "welcome": {
      "title": "Welcome to NQChess",
      "description": "Class and student management system"
    }
  },
  "auth": {
    "forms": {
      "login": "Login",
      "register": "Register",
      "email": "Email",
      "password": "Password",
      "username": "Username",
      "rememberMe": "Remember me",
      "forgotPassword": "Forgot Password?",
      "dontHaveAccount": "Don't have an account?",
      "loggingIn": "Logging in...",
      "loginSuccess": "Login successful"
    },
    "errors": {
      "invalidCredentials": "Invalid email or password",
      "emailRequired": "Email is required",
      "passwordMinLength": "Password must be at least {min} characters",
      "userNotFound": "User not found",
      "unauthorized": "You are not authorized to perform this action"
    },
    "success": {
      "loginSuccess": "Login successful",
      "logoutSuccess": "Logout successful"
    }
  },
  "dashboard": {
    "welcome": "Welcome, {name}",
    "stats": {
      "users": {
        "one": "1 user",
        "other": "{count} users"
      }
    }
  },
  "attendance": {
    "validation": {
      "invalidStatus": "Invalid attendance status",
      "invalidDate": "Invalid date",
      "missingRequiredFields": "Missing required fields: student code, lesson code, status, date"
    },
    "errors": {
      "notFound": "Attendance record not found",
      "createFailed": "Failed to create attendance record",
      "updateFailed": "Failed to update attendance record",
      "deleteFailed": "Failed to delete attendance record"
    },
    "success": {
      "createSuccess": "Attendance record created successfully",
      "updateSuccess": "Attendance record updated successfully",
      "deleteSuccess": "Attendance record deleted successfully"
    }
  },
  "lesson": {
    "validation": {
      "invalidTitle": "Title must be between 3-100 characters",
      "invalidDescription": "Description cannot exceed 500 characters",
      "invalidDate": "Invalid date",
      "invalidStartTime": "Invalid start time",
      "invalidEndTime": "Invalid end time",
      "invalidStatus": "Invalid lesson status",
      "missingRequiredFields": "Missing required fields: class code, start time, end time"
    },
    "errors": {
      "notFound": "Lesson not found",
      "createFailed": "Failed to create lesson",
      "updateFailed": "Failed to update lesson",
      "deleteFailed": "Failed to delete lesson"
    },
    "success": {
      "createSuccess": "Lesson created successfully",
      "updateSuccess": "Lesson updated successfully",
      "deleteSuccess": "Lesson deleted successfully"
    }
  },
  "user": {
    "validation": {
      "invalidUsername": "Username must be 3-20 characters and contain only letters, numbers and underscores",
      "invalidPassword": "Password must have at least 8 characters, 1 uppercase, 1 lowercase and 1 number",
      "invalidEmail": "Invalid email",
      "invalidPhone": "Invalid phone number",
      "invalidRole": "Invalid role",
      "missingRequiredFields": "Missing required fields: username, password, email, role"
    },
    "errors": {
      "notFound": "User not found",
      "createFailed": "Failed to create user",
      "updateFailed": "Failed to update user",
      "deleteFailed": "Failed to delete user"
    },
    "success": {
      "createSuccess": "User created successfully",
      "updateSuccess": "User updated successfully",
      "deleteSuccess": "User deleted successfully"
    }
  },
  "tuition": {
    "validation": {
      "invalidAmount": "Amount must be greater than 0",
      "invalidMonth": "Invalid month (format: MM/YYYY)",
      "invalidStatus": "Invalid payment status",
      "missingRequiredFields": "Missing required fields: class code, student code, amount, month"
    },
    "errors": {
      "notFound": "Tuition record not found",
      "createFailed": "Failed to create tuition record",
      "updateFailed": "Failed to update tuition record",
      "deleteFailed": "Failed to delete tuition record"
    },
    "success": {
      "createSuccess": "Tuition record created successfully",
      "updateSuccess": "Tuition record updated successfully",
      "deleteSuccess": "Tuition record deleted successfully"
    }
  },
  "student": {
    "validation": {
      "missingRequiredFields": "Missing required fields: name, date of birth, phone number",
      "invalidName": "Student name cannot be empty and must be between 2-50 characters",
      "invalidPhone": "Invalid phone number",
      "invalidDob": "Invalid date of birth",
      "invalidGender": "Invalid gender",
      "invalidClasses": "Invalid class list",
      "invalidAvatar": "Invalid avatar format or size"
    },
    "errors": {
      "notFound": "Student not found",
      "createFailed": "Failed to create student",
      "updateFailed": "Failed to update student",
      "deleteFailed": "Failed to delete student"
    },
    "success": {
      "createSuccess": "Student created successfully",
      "updateSuccess": "Student updated successfully",
      "deleteSuccess": "Student deleted successfully"
    }
  },
  "class": {
    "validation": {
      "missingRequiredFields": "Missing required fields: name, startDate, endDate, schedules",
      "invalidName": "Class name must be between 2 and 50 characters",
      "invalidStartDate": "Invalid start date format (dd/mm/yyyy) or date is in the past",
      "invalidEndDate": "Invalid end date format (dd/mm/yyyy) or date is before start date",
      "invalidSchedules": "Invalid schedules format",
      "invalidStudentData": "Invalid student data format",
      "invalidStatus": "Invalid class status",
      "invalidTuition": "Tuition must be a positive number",
      "invalidStudentStatus": "Invalid student status"
    },
    "success": {
      "createSuccess": "Class created successfully",
      "updateSuccess": "Class updated successfully",
      "deleteSuccess": "Class deleted successfully",
      "addStudentsSuccess": "Students added to class successfully"
    },
    "errors": {
      "createFailed": "Failed to create class",
      "updateFailed": "Failed to update class",
      "deleteFailed": "Failed to delete class",
      "notFound": "Class not found",
      "duplicateStudents": "Some students are already in the class"
    }
  }
}
